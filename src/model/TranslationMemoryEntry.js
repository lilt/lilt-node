/**
 * Lilt REST API
 * The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests. ## Authentication Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use. 
 *
 * OpenAPI spec version: v2.0
 * Contact: support@lilt.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The TranslationMemoryEntry model module.
* @module model/TranslationMemoryEntry
* @version v2.0
*/
export default class TranslationMemoryEntry {
    /**
    * Constructs a new <code>TranslationMemoryEntry</code>.
    * A translation memory entry.
    * @alias module:model/TranslationMemoryEntry
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>TranslationMemoryEntry</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/TranslationMemoryEntry} obj Optional instance to populate.
    * @return {module:model/TranslationMemoryEntry} The populated <code>TranslationMemoryEntry</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TranslationMemoryEntry();
                        
            
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

    /**
    * The source string.
    * @member {String} source
    */
    source = undefined;
    /**
    * The target string. Tags will be automatically placed according to the query string.
    * @member {String} target
    */
    target = undefined;
    /**
    * The fuzzy match score.
    * @member {Number} score
    */
    score = undefined;
    /**
    * Attributes describing the translation memory entry.
    * @member {Object} metadata
    */
    metadata = undefined;




}
