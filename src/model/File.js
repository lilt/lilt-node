/**
 * Lilt REST API
 * The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests. ## Authentication Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use. 
 *
 * OpenAPI spec version: v2.0
 * Contact: support@lilt.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The File model module.
* @module model/File
* @version v2.0
*/
export default class File {
    /**
    * Constructs a new <code>File</code>.
    * A File is an unprocessed source file that can later be added to a project.
    * @alias module:model/File
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>File</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/File} obj Optional instance to populate.
    * @return {module:model/File} The populated <code>File</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new File();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('file_hash')) {
                obj['file_hash'] = ApiClient.convertToType(data['file_hash'], 'String');
            }
            if (data.hasOwnProperty('export_uri')) {
                obj['export_uri'] = ApiClient.convertToType(data['export_uri'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Number');
            }
        }
        return obj;
    }

    /**
    * A unique number identifying the File.
    * @member {Number} id
    */
    id = undefined;
    /**
    * The file name.
    * @member {String} name
    */
    name = undefined;
    /**
    * A unique hash value associated with the file. An MD5 hash of the file content will be used by default.
    * @member {String} file_hash
    */
    file_hash = undefined;
    /**
    * A webhook endpoint that will export the translated document back to the source repository.
    * @member {String} export_uri
    */
    export_uri = undefined;
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    * @member {Number} created_at
    */
    created_at = undefined;
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    * @member {Number} updated_at
    */
    updated_at = undefined;




}
