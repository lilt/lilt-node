/**
 * Lilt REST API
 * The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests.  ## Authentication  Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use.  ## Quotas  Our services have a general quota of 4000 requests per minute. Should you hit the maximum requests per minute, you will need to wait 60 seconds before you can send another request. 
 *
 * The version of the OpenAPI document: v2.0
 * Contact: support@lilt.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssignmentDetails model module.
 * @module model/AssignmentDetails
 * @version 0.5.0
 */
class AssignmentDetails {
    /**
     * Constructs a new <code>AssignmentDetails</code>.
     * @alias module:model/AssignmentDetails
     */
    constructor() { 
        
        AssignmentDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssignmentDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssignmentDetails} obj Optional instance to populate.
     * @return {module:model/AssignmentDetails} The populated <code>AssignmentDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssignmentDetails();

            if (data.hasOwnProperty('isPreferredTranslator')) {
                obj['isPreferredTranslator'] = ApiClient.convertToType(data['isPreferredTranslator'], 'Boolean');
            }
            if (data.hasOwnProperty('wordsLeftAveragedTranslator')) {
                obj['wordsLeftAveragedTranslator'] = ApiClient.convertToType(data['wordsLeftAveragedTranslator'], 'Number');
            }
            if (data.hasOwnProperty('wordsLeftAveragedReviewer')) {
                obj['wordsLeftAveragedReviewer'] = ApiClient.convertToType(data['wordsLeftAveragedReviewer'], 'Number');
            }
            if (data.hasOwnProperty('assignmentErrors')) {
                obj['assignmentErrors'] = ApiClient.convertToType(data['assignmentErrors'], ['String']);
            }
            if (data.hasOwnProperty('docId')) {
                obj['docId'] = ApiClient.convertToType(data['docId'], 'Number');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'Number');
            }
            if (data.hasOwnProperty('isAutoAssigned')) {
                obj['isAutoAssigned'] = ApiClient.convertToType(data['isAutoAssigned'], 'Boolean');
            }
            if (data.hasOwnProperty('translatorUserId')) {
                obj['translatorUserId'] = ApiClient.convertToType(data['translatorUserId'], 'Number');
            }
            if (data.hasOwnProperty('translatorRoleId')) {
                obj['translatorRoleId'] = ApiClient.convertToType(data['translatorRoleId'], 'Number');
            }
            if (data.hasOwnProperty('translatorDueDate')) {
                obj['translatorDueDate'] = ApiClient.convertToType(data['translatorDueDate'], 'String');
            }
            if (data.hasOwnProperty('reviewerUserId')) {
                obj['reviewerUserId'] = ApiClient.convertToType(data['reviewerUserId'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {Boolean} isPreferredTranslator
 */
AssignmentDetails.prototype['isPreferredTranslator'] = undefined;

/**
 * @member {Number} wordsLeftAveragedTranslator
 */
AssignmentDetails.prototype['wordsLeftAveragedTranslator'] = undefined;

/**
 * @member {Number} wordsLeftAveragedReviewer
 */
AssignmentDetails.prototype['wordsLeftAveragedReviewer'] = undefined;

/**
 * @member {Array.<String>} assignmentErrors
 */
AssignmentDetails.prototype['assignmentErrors'] = undefined;

/**
 * @member {Number} docId
 */
AssignmentDetails.prototype['docId'] = undefined;

/**
 * @member {Number} projectId
 */
AssignmentDetails.prototype['projectId'] = undefined;

/**
 * @member {Boolean} isAutoAssigned
 */
AssignmentDetails.prototype['isAutoAssigned'] = undefined;

/**
 * @member {Number} translatorUserId
 */
AssignmentDetails.prototype['translatorUserId'] = undefined;

/**
 * @member {Number} translatorRoleId
 */
AssignmentDetails.prototype['translatorRoleId'] = undefined;

/**
 * @member {String} translatorDueDate
 */
AssignmentDetails.prototype['translatorDueDate'] = undefined;

/**
 * @member {Number} reviewerUserId
 */
AssignmentDetails.prototype['reviewerUserId'] = undefined;






export default AssignmentDetails;

