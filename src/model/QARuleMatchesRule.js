/**
 * Lilt REST API
 * The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests. ## Authentication Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use. 
 *
 * The version of the OpenAPI document: v2.0
 * Contact: support@lilt.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QARuleMatchesRuleCategory from './QARuleMatchesRuleCategory';
import QARuleMatchesRuleUrls from './QARuleMatchesRuleUrls';

/**
 * The QARuleMatchesRule model module.
 * @module model/QARuleMatchesRule
 * @version 0.5.0
 */
class QARuleMatchesRule {
    /**
     * Constructs a new <code>QARuleMatchesRule</code>.
     * @alias module:model/QARuleMatchesRule
     * @param category {module:model/QARuleMatchesRuleCategory} 
     * @param description {String} 
     * @param id {String} An rule's identifier that's unique for this language.
     */
    constructor(category, description, id) { 
        
        QARuleMatchesRule.initialize(this, category, description, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, category, description, id) { 
        obj['category'] = category;
        obj['description'] = description;
        obj['id'] = id;
    }

    /**
     * Constructs a <code>QARuleMatchesRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QARuleMatchesRule} obj Optional instance to populate.
     * @return {module:model/QARuleMatchesRule} The populated <code>QARuleMatchesRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QARuleMatchesRule();

            if (data.hasOwnProperty('category')) {
                obj['category'] = QARuleMatchesRuleCategory.constructFromObject(data['category']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('issueType')) {
                obj['issueType'] = ApiClient.convertToType(data['issueType'], 'String');
            }
            if (data.hasOwnProperty('subId')) {
                obj['subId'] = ApiClient.convertToType(data['subId'], 'String');
            }
            if (data.hasOwnProperty('urls')) {
                obj['urls'] = ApiClient.convertToType(data['urls'], [QARuleMatchesRuleUrls]);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/QARuleMatchesRuleCategory} category
 */
QARuleMatchesRule.prototype['category'] = undefined;

/**
 * @member {String} description
 */
QARuleMatchesRule.prototype['description'] = undefined;

/**
 * An rule's identifier that's unique for this language.
 * @member {String} id
 */
QARuleMatchesRule.prototype['id'] = undefined;

/**
 * The Localization Quality Issue Type. This is not defined for all languages, in which case it will always be 'Uncategorized'.
 * @member {String} issueType
 */
QARuleMatchesRule.prototype['issueType'] = undefined;

/**
 * An optional sub identifier of the rule, used when several rules are grouped.
 * @member {String} subId
 */
QARuleMatchesRule.prototype['subId'] = undefined;

/**
 * An optional array of URLs with a more detailed description of the error.
 * @member {Array.<module:model/QARuleMatchesRuleUrls>} urls
 */
QARuleMatchesRule.prototype['urls'] = undefined;






export default QARuleMatchesRule;

