/**
 * Lilt REST API
 * The Lilt REST API enables programmatic access to the full-range of Lilt backend services including:   * Training of and translating with interactive, adaptive machine translation   * Large-scale translation memory   * The Lexicon (a large-scale termbase)   * Programmatic control of the Lilt CAT environment   * Translation memory synchronization  Requests and responses are in JSON format. The REST API only responds to HTTPS / SSL requests. ## Authentication Requests are authenticated via REST API key, which requires the Business plan.  Requests are authenticated using [HTTP Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication). Add your REST API key as both the `username` and `password`.  For development, you may also pass the REST API key via the `key` query parameter. This is less secure than HTTP Basic Auth, and is not recommended for production use. 
 *
 * The version of the OpenAPI document: v2.0
 * Contact: support@lilt.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectUpdateResponse model module.
 * @module model/ProjectUpdateResponse
 * @version 0.5.0
 */
class ProjectUpdateResponse {
    /**
     * Constructs a new <code>ProjectUpdateResponse</code>.
     * @alias module:model/ProjectUpdateResponse
     * @param id {Number} A unique Project identifier.
     */
    constructor(id) { 
        
        ProjectUpdateResponse.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>ProjectUpdateResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectUpdateResponse} obj Optional instance to populate.
     * @return {module:model/ProjectUpdateResponse} The populated <code>ProjectUpdateResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectUpdateResponse();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('due_date')) {
                obj['due_date'] = ApiClient.convertToType(data['due_date'], 'Number');
            }
            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('sample_review_percentage')) {
                obj['sample_review_percentage'] = ApiClient.convertToType(data['sample_review_percentage'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * A unique Project identifier.
 * @member {Number} id
 */
ProjectUpdateResponse.prototype['id'] = undefined;

/**
 * The Project name.
 * @member {String} name
 */
ProjectUpdateResponse.prototype['name'] = undefined;

/**
 * The project's state. The possible states are 'backlog', 'inProgress', 'inReview', 'inQA', and 'done'
 * @member {String} state
 */
ProjectUpdateResponse.prototype['state'] = undefined;

/**
 * The due date. Measured in seconds since the Unix epoch.
 * @member {Number} due_date
 */
ProjectUpdateResponse.prototype['due_date'] = undefined;

/**
 * True if the project is archived. Otherwise, false.
 * @member {Boolean} archived
 */
ProjectUpdateResponse.prototype['archived'] = undefined;

/**
 * Metadata associated with a project. This field must be valid JSON.
 * @member {Object} metadata
 */
ProjectUpdateResponse.prototype['metadata'] = undefined;

/**
 * The Project's sample review percentage. Must be an integer between 10 and 100, a multiple of 10 and greater than minimum value (displayed in error message).
 * @member {Number} sample_review_percentage
 */
ProjectUpdateResponse.prototype['sample_review_percentage'] = undefined;






export default ProjectUpdateResponse;

